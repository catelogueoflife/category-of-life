<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.touchkiss.categoryoflife.life.mapper.LifeCategorySourceDatabaseDaoM">
  <resultMap id="BaseResultMap" type="com.touchkiss.categoryoflife.life.bean.LifeCategorySourceDatabase">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="life_id" jdbcType="INTEGER" property="lifeId" />
    <result column="database_id" jdbcType="INTEGER" property="databaseId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="last_modify_time" jdbcType="BIGINT" property="lastModifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id,life_id,database_id,create_time,last_modify_time
  </sql>
  <insert id="insert" parameterType="com.touchkiss.categoryoflife.life.bean.LifeCategorySourceDatabase">
     insert into t_life_category_source_database(<include refid="Base_Column_List"></include>)
     values (
     #{id,jdbcType=INTEGER},#{lifeId,jdbcType=INTEGER},#{databaseId,jdbcType=INTEGER},#{createTime,jdbcType=BIGINT},#{lastModifyTime,jdbcType=BIGINT}) 
  </insert>
  <insert id="insertWithoutId" parameterType="com.touchkiss.categoryoflife.life.bean.LifeCategorySourceDatabase" useGeneratedKeys="true" keyProperty="id">
     insert into t_life_category_source_database(life_id,database_id,create_time,last_modify_time)
     values (
     #{lifeId,jdbcType=INTEGER},#{databaseId,jdbcType=INTEGER},#{createTime,jdbcType=BIGINT},#{lastModifyTime,jdbcType=BIGINT}) 
  </insert>
  <delete id="deleteById" parameterType="java.lang.Integer">
     delete from t_life_category_source_database
     where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByMap">
        delete from t_life_category_source_database
        <include refid="whereSql"></include>
    </delete>
  <update id="updateById">
     update t_life_category_source_database
     set
       life_id = #{lifeCategorySourceDatabase.lifeId,jdbcType=INTEGER},
       database_id = #{lifeCategorySourceDatabase.databaseId,jdbcType=INTEGER},
       create_time = #{lifeCategorySourceDatabase.createTime,jdbcType=BIGINT},
       last_modify_time = #{lifeCategorySourceDatabase.lastModifyTime,jdbcType=BIGINT}
     where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelectiveById">
     update t_life_category_source_database
     set
        <trim suffixOverrides=",">
     <if test="lifeCategorySourceDatabase.lifeId != null">
       life_id = #{lifeCategorySourceDatabase.lifeId,jdbcType=INTEGER},
     </if>
     <if test="lifeCategorySourceDatabase.databaseId != null">
       database_id = #{lifeCategorySourceDatabase.databaseId,jdbcType=INTEGER},
     </if>
     <if test="lifeCategorySourceDatabase.createTime != null">
       create_time = #{lifeCategorySourceDatabase.createTime,jdbcType=BIGINT},
     </if>
     <if test="lifeCategorySourceDatabase.lastModifyTime != null">
       last_modify_time = #{lifeCategorySourceDatabase.lastModifyTime,jdbcType=BIGINT}
     </if>
        </trim>
     where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelectiveByMap">
     update t_life_category_source_database
     set
        <trim suffixOverrides=",">
     <if test="lifeCategorySourceDatabase.lifeId != null">
       life_id = #{lifeCategorySourceDatabase.lifeId,jdbcType=INTEGER},
     </if>
     <if test="lifeCategorySourceDatabase.databaseId != null">
       database_id = #{lifeCategorySourceDatabase.databaseId,jdbcType=INTEGER},
     </if>
     <if test="lifeCategorySourceDatabase.createTime != null">
       create_time = #{lifeCategorySourceDatabase.createTime,jdbcType=BIGINT},
     </if>
     <if test="lifeCategorySourceDatabase.lastModifyTime != null">
       last_modify_time = #{lifeCategorySourceDatabase.lastModifyTime,jdbcType=BIGINT}
     </if>
        </trim>
        <include refid="whereSql"></include>
  </update>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
     select
     <include refid="Base_Column_List" />
     from t_life_category_source_database
     where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="queryLifeCategorySourceDatabaseList" parameterType="java.util.HashMap"  resultMap="BaseResultMap">
     select * FROM  t_life_category_source_database  <include refid="whereSql"></include>
     <if test="wheres.get('datatableorderby')!=null and wheres.get('datatableorderby')!='' ">
         ${wheres.get('datatableorderby')}
     </if>
     <if test="wheres.get('limit')!=null and wheres.get('limit')!='' ">
         ${wheres.get('limit')}
     </if>
  </select>
  <select id="findByPage" parameterType="java.util.HashMap"  resultMap="BaseResultMap" useCache="false">
     select * FROM  t_life_category_source_database  <include refid="whereSql"></include>
     <if test="wheres.get('datatableorderby')!=null and wheres.get('datatableorderby')!='' ">
         ${wheres.get('datatableorderby')}
     </if>
  </select>
  <sql id="whereSql">
        <if test="wheres != null and wheres.size() > 0">
            where 1 = 1
            <foreach collection="wheres.entrySet()" item="value" index="key">
                <bind name="valid" value="1"/>
                <if test="key != null and key != '' and key.trim() != '' and ((key.endsWith('_isn') or key.endsWith('_isnn')) or (!key.endsWith('_isn') and !key.endsWith('_isnn') and value != null and value != ''))">
                    <choose>
                        <when test="key == 'id' or key.startsWith('id_')">and id</when>
                        <when test="key == 'lifeId' or key.startsWith('lifeId_')">and life_id</when>
                        <when test="key == 'databaseId' or key.startsWith('databaseId_')">and database_id</when>
                        <when test="key == 'createTime' or key.startsWith('createTime_')">and create_time</when>
                        <when test="key == 'lastModifyTime' or key.startsWith('lastModifyTime_')">and last_modify_time</when>
                        <otherwise>
                            <bind name="valid" value="0"/>
                        </otherwise>
                    </choose>
                    <if test="valid == 1">
                        <choose>
                            <when test="key.endsWith('_eq')">= #{value}</when>
                            <when test="key.endsWith('_ne')">&lt;&gt; #{value}</when>
                            <when test="key.endsWith('_lt')">&lt; #{value}</when>
                            <when test="key.endsWith('_gt')">&gt; #{value}</when>
                            <when test="key.endsWith('_let')">&lt;= #{value}</when>
                            <when test="key.endsWith('_get')">&gt;= #{value}</when>
                            <when test="key.endsWith('_reg')">regexp #{value}</when>
                            <when test="key.endsWith('_in')">in (${value})</when>
                            <when test="key.endsWith('_nin')">not in (${value})</when>
                            <when test="key.endsWith('_like')">like '%${value}%'</when>
                            <when test="key.endsWith('_nlike')">not like '%${value}%'</when>
                            <when test="key.endsWith('_isn')">is null</when>
                            <when test="key.endsWith('_isnn')">is not null</when>
                            <otherwise>= #{value}</otherwise>
                        </choose>
                    </if>
                </if>
            </foreach>
        </if>
  </sql>
</mapper>
