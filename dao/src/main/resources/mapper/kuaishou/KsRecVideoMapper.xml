<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.touchkiss.catelogueoflife.kuaishou.mapper.KsRecVideoDaoM">
  <resultMap id="BaseResultMap" type="com.touchkiss.catelogueoflife.kuaishou.bean.KsRecVideo">
    <id column="photo_id" jdbcType="VARCHAR" property="photoId" />
    <result column="source_user_id" jdbcType="VARCHAR" property="sourceUserId" />
    <result column="source_kuai_id" jdbcType="VARCHAR" property="sourceKuaiId" />
    <result column="source_user_name" jdbcType="VARCHAR" property="sourceUserName" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="upload_time" jdbcType="BIGINT" property="uploadTime" />
    <result column="upload_date" jdbcType="BIGINT" property="uploadDate" />
    <result column="like_count" jdbcType="BIGINT" property="likeCount" />
    <result column="comment_count" jdbcType="BIGINT" property="commentCount" />
    <result column="share_count" jdbcType="BIGINT" property="shareCount" />
    <result column="view_count" jdbcType="BIGINT" property="viewCount" />
    <result column="video_url" jdbcType="VARCHAR" property="videoUrl" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="create_date" jdbcType="BIGINT" property="createDate" />
    <result column="last_modify_time" jdbcType="BIGINT" property="lastModifyTime" />
    <result column="now_status" jdbcType="INTEGER" property="nowStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    photo_id,source_user_id,source_kuai_id,source_user_name,title,upload_time,upload_date,like_count,comment_count,share_count,view_count,video_url,create_time,create_date,last_modify_time,now_status
  </sql>
  <insert id="insert" parameterType="com.touchkiss.catelogueoflife.kuaishou.bean.KsRecVideo">
     insert into ks_rec_video(<include refid="Base_Column_List"></include>)
     values (
     #{photoId,jdbcType=VARCHAR},#{sourceUserId,jdbcType=VARCHAR},#{sourceKuaiId,jdbcType=VARCHAR},#{sourceUserName,jdbcType=VARCHAR},#{title,jdbcType=VARCHAR},#{uploadTime,jdbcType=BIGINT},#{uploadDate,jdbcType=BIGINT},#{likeCount,jdbcType=BIGINT},#{commentCount,jdbcType=BIGINT},#{shareCount,jdbcType=BIGINT},#{viewCount,jdbcType=BIGINT},#{videoUrl,jdbcType=VARCHAR},#{createTime,jdbcType=BIGINT},#{createDate,jdbcType=BIGINT},#{lastModifyTime,jdbcType=BIGINT},#{nowStatus,jdbcType=INTEGER}) 
  </insert>
  <delete id="deleteByPhotoId" parameterType="java.lang.String">
     delete from ks_rec_video
     where photo_id = #{photoId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByMap">
        delete from ks_rec_video
        <include refid="whereSql"></include>
    </delete>
  <update id="updateByPhotoId">
     update ks_rec_video
     set
       source_user_id = #{ksRecVideo.sourceUserId,jdbcType=VARCHAR},
       source_kuai_id = #{ksRecVideo.sourceKuaiId,jdbcType=VARCHAR},
       source_user_name = #{ksRecVideo.sourceUserName,jdbcType=VARCHAR},
       title = #{ksRecVideo.title,jdbcType=VARCHAR},
       upload_time = #{ksRecVideo.uploadTime,jdbcType=BIGINT},
       upload_date = #{ksRecVideo.uploadDate,jdbcType=BIGINT},
       like_count = #{ksRecVideo.likeCount,jdbcType=BIGINT},
       comment_count = #{ksRecVideo.commentCount,jdbcType=BIGINT},
       share_count = #{ksRecVideo.shareCount,jdbcType=BIGINT},
       view_count = #{ksRecVideo.viewCount,jdbcType=BIGINT},
       video_url = #{ksRecVideo.videoUrl,jdbcType=VARCHAR},
       create_time = #{ksRecVideo.createTime,jdbcType=BIGINT},
       create_date = #{ksRecVideo.createDate,jdbcType=BIGINT},
       last_modify_time = #{ksRecVideo.lastModifyTime,jdbcType=BIGINT},
       now_status = #{ksRecVideo.nowStatus,jdbcType=INTEGER}
     where photo_id = #{photoId,jdbcType=VARCHAR}
  </update>
  <update id="updateSelectiveByPhotoId">
     update ks_rec_video
     set
        <trim suffixOverrides=",">
     <if test="ksRecVideo.sourceUserId != null">
       source_user_id = #{ksRecVideo.sourceUserId,jdbcType=VARCHAR},
     </if>
     <if test="ksRecVideo.sourceKuaiId != null">
       source_kuai_id = #{ksRecVideo.sourceKuaiId,jdbcType=VARCHAR},
     </if>
     <if test="ksRecVideo.sourceUserName != null">
       source_user_name = #{ksRecVideo.sourceUserName,jdbcType=VARCHAR},
     </if>
     <if test="ksRecVideo.title != null">
       title = #{ksRecVideo.title,jdbcType=VARCHAR},
     </if>
     <if test="ksRecVideo.uploadTime != null">
       upload_time = #{ksRecVideo.uploadTime,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.uploadDate != null">
       upload_date = #{ksRecVideo.uploadDate,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.likeCount != null">
       like_count = #{ksRecVideo.likeCount,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.commentCount != null">
       comment_count = #{ksRecVideo.commentCount,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.shareCount != null">
       share_count = #{ksRecVideo.shareCount,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.viewCount != null">
       view_count = #{ksRecVideo.viewCount,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.videoUrl != null">
       video_url = #{ksRecVideo.videoUrl,jdbcType=VARCHAR},
     </if>
     <if test="ksRecVideo.createTime != null">
       create_time = #{ksRecVideo.createTime,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.createDate != null">
       create_date = #{ksRecVideo.createDate,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.lastModifyTime != null">
       last_modify_time = #{ksRecVideo.lastModifyTime,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.nowStatus != null">
       now_status = #{ksRecVideo.nowStatus,jdbcType=INTEGER}
     </if>
        </trim>
     where photo_id = #{photoId,jdbcType=VARCHAR}
  </update>
  <update id="updateSelectiveByMap">
     update ks_rec_video
     set
        <trim suffixOverrides=",">
     <if test="ksRecVideo.sourceUserId != null">
       source_user_id = #{ksRecVideo.sourceUserId,jdbcType=VARCHAR},
     </if>
     <if test="ksRecVideo.sourceKuaiId != null">
       source_kuai_id = #{ksRecVideo.sourceKuaiId,jdbcType=VARCHAR},
     </if>
     <if test="ksRecVideo.sourceUserName != null">
       source_user_name = #{ksRecVideo.sourceUserName,jdbcType=VARCHAR},
     </if>
     <if test="ksRecVideo.title != null">
       title = #{ksRecVideo.title,jdbcType=VARCHAR},
     </if>
     <if test="ksRecVideo.uploadTime != null">
       upload_time = #{ksRecVideo.uploadTime,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.uploadDate != null">
       upload_date = #{ksRecVideo.uploadDate,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.likeCount != null">
       like_count = #{ksRecVideo.likeCount,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.commentCount != null">
       comment_count = #{ksRecVideo.commentCount,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.shareCount != null">
       share_count = #{ksRecVideo.shareCount,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.viewCount != null">
       view_count = #{ksRecVideo.viewCount,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.videoUrl != null">
       video_url = #{ksRecVideo.videoUrl,jdbcType=VARCHAR},
     </if>
     <if test="ksRecVideo.createTime != null">
       create_time = #{ksRecVideo.createTime,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.createDate != null">
       create_date = #{ksRecVideo.createDate,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.lastModifyTime != null">
       last_modify_time = #{ksRecVideo.lastModifyTime,jdbcType=BIGINT},
     </if>
     <if test="ksRecVideo.nowStatus != null">
       now_status = #{ksRecVideo.nowStatus,jdbcType=INTEGER}
     </if>
        </trim>
        <include refid="whereSql"></include>
  </update>
  <select id="selectByPhotoId" resultMap="BaseResultMap" parameterType="java.lang.String" >
     select
     <include refid="Base_Column_List" />
     from ks_rec_video
     where photo_id = #{photoId,jdbcType=VARCHAR}
  </select>
  <select id="queryKsRecVideoList" parameterType="java.util.HashMap"  resultMap="BaseResultMap">
     select * FROM  ks_rec_video  <include refid="whereSql"></include>
     <if test="wheres.get('datatableorderby')!=null and wheres.get('datatableorderby')!='' ">
         ${wheres.get('datatableorderby')}
     </if>
     <if test="wheres.get('limit')!=null and wheres.get('limit')!='' ">
         ${wheres.get('limit')}
     </if>
  </select>
  <select id="findByPage" parameterType="java.util.HashMap"  resultMap="BaseResultMap" useCache="false">
     select * FROM  ks_rec_video  <include refid="whereSql"></include>
     <if test="wheres.get('datatableorderby')!=null and wheres.get('datatableorderby')!='' ">
         ${wheres.get('datatableorderby')}
     </if>
  </select>
  <sql id="whereSql">
        <if test="wheres != null and wheres.size() > 0">
            where 1 = 1
            <foreach collection="wheres.entrySet()" item="value" index="key">
                <bind name="valid" value="1"/>
                <if test="key != null and key != '' and key.trim() != '' and ((key.endsWith('_isn') or key.endsWith('_isnn')) or (!key.endsWith('_isn') and !key.endsWith('_isnn') and value != null and value != ''))">
                    <choose>
                        <when test="key == 'photoId' or key.startsWith('photoId_')">and photo_id</when>
                        <when test="key == 'sourceUserId' or key.startsWith('sourceUserId_')">and source_user_id</when>
                        <when test="key == 'sourceKuaiId' or key.startsWith('sourceKuaiId_')">and source_kuai_id</when>
                        <when test="key == 'sourceUserName' or key.startsWith('sourceUserName_')">and source_user_name</when>
                        <when test="key == 'title' or key.startsWith('title_')">and title</when>
                        <when test="key == 'uploadTime' or key.startsWith('uploadTime_')">and upload_time</when>
                        <when test="key == 'uploadDate' or key.startsWith('uploadDate_')">and upload_date</when>
                        <when test="key == 'likeCount' or key.startsWith('likeCount_')">and like_count</when>
                        <when test="key == 'commentCount' or key.startsWith('commentCount_')">and comment_count</when>
                        <when test="key == 'shareCount' or key.startsWith('shareCount_')">and share_count</when>
                        <when test="key == 'viewCount' or key.startsWith('viewCount_')">and view_count</when>
                        <when test="key == 'videoUrl' or key.startsWith('videoUrl_')">and video_url</when>
                        <when test="key == 'createTime' or key.startsWith('createTime_')">and create_time</when>
                        <when test="key == 'createDate' or key.startsWith('createDate_')">and create_date</when>
                        <when test="key == 'lastModifyTime' or key.startsWith('lastModifyTime_')">and last_modify_time</when>
                        <when test="key == 'nowStatus' or key.startsWith('nowStatus_')">and now_status</when>
                        <otherwise>
                            <bind name="valid" value="0"/>
                        </otherwise>
                    </choose>
                    <if test="valid == 1">
                        <choose>
                            <when test="key.endsWith('_eq')">= #{value}</when>
                            <when test="key.endsWith('_ne')">&lt;&gt; #{value}</when>
                            <when test="key.endsWith('_lt')">&lt; #{value}</when>
                            <when test="key.endsWith('_gt')">&gt; #{value}</when>
                            <when test="key.endsWith('_let')">&lt;= #{value}</when>
                            <when test="key.endsWith('_get')">&gt;= #{value}</when>
                            <when test="key.endsWith('_reg')">regexp #{value}</when>
                            <when test="key.endsWith('_in')">in (${value})</when>
                            <when test="key.endsWith('_nin')">not in (${value})</when>
                            <when test="key.endsWith('_like')">like '%${value}%'</when>
                            <when test="key.endsWith('_nlike')">not like '%${value}%'</when>
                            <when test="key.endsWith('_isn')">is null</when>
                            <when test="key.endsWith('_isnn')">is not null</when>
                            <otherwise>= #{value}</otherwise>
                        </choose>
                    </if>
                </if>
            </foreach>
        </if>
  </sql>
</mapper>
